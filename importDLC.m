function T = importDLC(filename,startRow,endRow,varargin)
%% IMPORTDLC Import numeric data from a text file as a matrix.
%
%  T = IMPORTDLC(filename);
%  T = IMPORTDLC(filename,startRow);
%  T = IMPORTDLC(filename,startRow,endRow);
%  T = IMPORTDLC(__,'NAME',value,...);
%
% Example:
%  F = dir('C:/path/to/labeled/files/*.csv');
%  T = cell(size(F),1);
%  for ii = 1:numel(F)
%     T{ii} = IMPORTDLC(F(ii).name);
%  end
%
%    See also TEXTSCAN.
%
% Auto-generated by MATLAB on 2018/07/23
% Modified by: Max Murphy

%% DEFAULTS
VAR_NAMES = {'frame', ...
             'dig1_d_x','dig1_d_y','dig1_d_p', ... % Distal digit-1
             'dig1_p_x','dig1_p_y','dig1_p_p', ... % Proximal digit-1
             'dig2_d_x','dig2_d_y','dig2_d_p', ...
             'dig2_p_x','dig2_p_y','dig2_p_p', ...
             'dig3_d_x','dig3_d_y','dig3_d_p', ...
             'dig3_p_x','dig3_p_y','dig3_p_p', ...
             'dig4_d_x','dig4_d_y','dig4_d_p', ...
             'dig4_p_x','dig4_p_y','dig4_p_p', ...
             'hand_x','hand_y','hand_p'}; % support hand

START_ROW = 4;
END_ROW = inf;
DELIM = ',';
END_OF_LINE = '\r\n';

%% PARSE VARARGIN
for iV = 1:2:numel(varargin)
   eval([upper(varargin{iV}) '=varargin{iV+1};']);
end

%% Initialize variables.
if nargin<=2
   startRow = START_ROW;
   endRow = END_ROW;
end

if nargin<=3
   endRow = END_ROW;
end

%% GET FORMAT FOR EACH LINE
nColumns = numel(VAR_NAMES); % Frame, then x,y,likelihood for each
formatSpec = repmat('%f',1,nColumns);
formatSpec = [formatSpec '%[^\n\r]'];

%% OPEN TEXT FILE
% fileID = fopen(fullfile(DIR,filename),'r');
fileID = fopen(filename,'r');

%% READ COLUMNS BASED ON FILE FORMAT
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, ...
            formatSpec, ...
            endRow(1)-startRow(1)+1, ...
            'Delimiter', DELIM, ...
            'TextType', 'string', ...
            'EmptyValue', NaN,...
            'HeaderLines', startRow(1)-1,...
            'ReturnOnError', false, ...
            'EndOfLine', END_OF_LINE);
         
for block=2:length(startRow)
   frewind(fileID);
   dataArrayBlock = textscan(fileID, ...
                     formatSpec, ...
                     endRow(block)-startRow(block)+1, ...
                     'Delimiter', DELIM, ...
                     'TextType', 'string', ...
                     'EmptyValue', NaN,...
                     'HeaderLines', startRow(block)-1,...
                     'ReturnOnError', false,...
                     'EndOfLine', END_OF_LINE);
   for col=1:length(dataArray)
      dataArray{col} = [dataArray{col};dataArrayBlock{col}];
   end
end

%% CLOSE TEXT FILE
fclose(fileID);

%% GENERATE OUTPUT
T = table(dataArray{1:end-1}, 'VariableNames', VAR_NAMES);

end